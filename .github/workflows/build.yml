name: Build
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target Directory
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Build project
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Strip binary
        run: strip target/release/worldql_server
      - name: Upload binary
        uses: actions/upload-artifact@v1
        with:
          name: worldql_server
          path: target/release/worldql_server
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Install Rust Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: checks-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo Index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: checks-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target Directory
        uses: actions/cache@v1
        with:
          path: target
          key: checks-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
      - name: Check for Clippy Warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Check Formatting
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: fmt
          args: --all -- --check
